object exer {


  def isTri(l: List[Int]) = l.sortWith(_ < _) match { case (a :: b :: c :: Nil) => c * c == a * a + b * b }
                                                  //> isTri: (l: List[Int])Boolean
  isTri(List(3, 4, 5))                            //> res0: Boolean = true
 
	(1 to 10).toList.map(_ => 1 to 10)        //> res1: List[scala.collection.immutable.Range.Inclusive] = List(Range(1, 2, 3,
                                                  //|  4, 5, 6, 7, 8, 9, 10), Range(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), Range(1, 2, 3,
                                                  //|  4, 5, 6, 7, 8, 9, 10), Range(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), Range(1, 2, 3,
                                                  //|  4, 5, 6, 7, 8, 9, 10), Range(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), Range(1, 2, 3,
                                                  //|  4, 5, 6, 7, 8, 9, 10), Range(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), Range(1, 2, 3,
                                                  //|  4, 5, 6, 7, 8, 9, 10), Range(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
	
	val ap = for( a <- 1 to 1000 ; b <- 1 to 1000) yield(a, b)
                                                  //> ap  : scala.collection.immutable.IndexedSeq[(Int, Int)] = Vector((1,1), (1,2
                                                  //| ), (1,3), (1,4), (1,5), (1,6), (1,7), (1,8), (1,9), (1,10), (1,11), (1,12), 
                                                  //| (1,13), (1,14), (1,15), (1,16), (1,17), (1,18), (1,19), (1,20), (1,21), (1,2
                                                  //| 2), (1,23), (1,24), (1,25), (1,26), (1,27), (1,28), (1,29), (1,30), (1,31), 
                                                  //| (1,32), (1,33), (1,34), (1,35), (1,36), (1,37), (1,38), (1,39), (1,40), (1,4
                                                  //| 1), (1,42), (1,43), (1,44), (1,45), (1,46), (1,47), (1,48), (1,49), (1,50), 
                                                  //| (1,51), (1,52), (1,53), (1,54), (1,55), (1,56), (1,57), (1,58), (1,59), (1,6
                                                  //| 0), (1,61), (1,62), (1,63), (1,64), (1,65), (1,66), (1,67), (1,68), (1,69), 
                                                  //| (1,70), (1,71), (1,72), (1,73), (1,74), (1,75), (1,76), (1,77), (1,78), (1,7
                                                  //| 9), (1,80), (1,81), (1,82), (1,83), (1,84), (1,85), (1,86), (1,87), (1,88), 
                                                  //| (1,89), (1,90), (1,91), (1,92), (1,93), (1,94), (1,95), (1,96), (1,97), (1,9
                                                  //| 8), (1,99), (1,100), (1,101), (1,102), (1,103), (1,104), (1,105), (1,106), (
                                                  //| 1,107), (1,108), (1,109)
                                                  //| Output exceeds cutoff limit.
	
	val ap2 = ap.map{case (a, b)=> List(a, b, 1000 - a - b).sortWith(_ < _)}.toSet
                                                  //> ap2  : scala.collection.immutable.Set[List[Int]] = Set(List(-59, 236, 823), 
                                                  //| List(145, 239, 616), List(178, 305, 517), List(172, 392, 436), List(-761, 83
                                                  //| 8, 923), List(203, 260, 537), List(-551, 559, 992), List(-491, 545, 946), Li
                                                  //| st(-351, 642, 709), List(-387, 522, 865), List(-54, 288, 766), List(-466, 47
                                                  //| 2, 994), List(-423, 543, 880), List(-814, 823, 991), List(-7, 369, 638), Lis
                                                  //| t(-515, 685, 830), List(104, 223, 673), List(-182, 394, 788), List(-195, 205
                                                  //| , 990), List(-17, 350, 667), List(-691, 702, 989), List(-593, 646, 947), Lis
                                                  //| t(-338, 626, 712), List(-465, 547, 918), List(-145, 500, 645), List(-63, 254
                                                  //| , 809), List(-241, 550, 691), List(-493, 675, 818), List(-194, 503, 691), Li
                                                  //| st(-619, 805, 814), List(92, 113, 795), List(-215, 448, 767), List(-539, 724
                                                  //| , 815), List(115, 358, 527), List(71, 259, 670), List(-93, 379, 714), List(-
                                                  //| 39, 224, 815), List(67, 161, 772), List(-117, 367, 750), List(175, 306, 519)
                                                  //| , List(-113, 316, 797), 
                                                  //| Output exceeds cutoff limit.
	// ap2.map{case (a, b, c) => List(a, b, c)}
	
	ap2.filter(isTri)                         //> res2: scala.collection.immutable.Set[List[Int]] = Set(List(0, 500, 500), Lis
                                                  //| t(-250, 600, 650), List(200, 375, 425))

}